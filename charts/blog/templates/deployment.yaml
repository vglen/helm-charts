apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blog.fullname" . }}
  labels:
    app: {{ template "blog.name" . }}
    {{- include "blog.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "blog.name" . }}
      {{- include "blog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ template "blog.name" . }}
        {{- include "blog.selectorLabels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "blog.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deploy.container_port }}
              protocol: TCP
            - name: http-status
              containerPort: {{ .Values.deploy.status_port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.ingress.enabled -}}
        - name: tunnel
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
          command: ["cloudflared", "tunnel"]
          args: ["url=http://127.0.0.1:80", "hostname=blog.glen.dev", "origincert=/etc/cloudflared/cert.pem", "no-autoupdate"]
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
          - mountPath: /etc/cloudflared
            name: tunnel-secret
            readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: tunnel-secret
            secret:
              secretName: glen.dev
          resources:
            {{- toYaml .Values.sidecar.resources | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
